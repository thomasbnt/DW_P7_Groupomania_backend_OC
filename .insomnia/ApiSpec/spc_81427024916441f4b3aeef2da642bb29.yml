_id: spc_81427024916441f4b3aeef2da642bb29
type: ApiSpec
parentId: wrk_fb10d999178a47d2b78a2e7f14018c2e
modified: 1664884894898
created: 1662047421048
fileName: OCDWP7OpenAPI.yaml
contents: >-
  openapi: 3.0.0

  info:
    description: "Projet n°7 OpenClassrooms Développeur Web. — Partie Backend."
    version: 1.0.0
    title: DW OC P7 Groupomania
    license:
      name: GNU Affero General Public License v3.0
      url: https://github.com/thomasbnt/DW_P7_Groupomania_backend_OC/blob/main/LICENSE
  servers: 
    - url: http://localhost:3000
  tags:
    - name: users
      description: "A propos d'un utilisateur"
    - name: posts
      description: "Section posts"
    - name: reactions
      description: "Ajouter ou supprimer une réaction sur un post"
    - name: technique
      description: "Seulement côté technique."
  paths:
    /users/signup:
      post:
        tags:
          - users
        summary: "Créer un nouveau compte"
        operationId: signupUser
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      email:
                        type: string
                      password:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                  profileImage:
                    type: string
                    format: base64
              encoding:
                imageProfile:
                  contentType: image/png, image/jpeg
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                    type: string    
    /users/login:
      post:
        tags:
          - users
        summary: "Se connecter à son compte"
        operationId: loginUser
        parameters:
          - name: email
            in: query
            description: "L'email du compte"
            required: true
            schema:
              type: string
          - name: password
            in: query
            description: "Le mot de passe du compte"
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: string
          "400":
            description: "Invalid username/password supplied"
    /users/me:
      get:
        tags:
          - users
        summary: Obtenir ses informations de profil public
        security:
          - bearerAuth: []
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/GetUser"
          "400":
            description: Invalid username supplied
          "404":
            description: User not found
      put:
        tags:
          - users
        summary: "Editer les informations du compte connecté"
        security:
          - bearerAuth: []
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                  profileImage:
                    type: string
                    format: base64
              encoding:
                imageProfile:
                  contentType: image/png, image/jpeg
        responses:
          "400":
            description: Invalid user supplied
          "404":
            description: User not found
    /users/security:
      post:
        tags:
          - users
        summary: "Modifier son mot de passe et/ou son adresse email"
        operationId: securityUser
        security:
        - bearerAuth: []
        requestBody:
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/PostUserSecurity"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  properties:
                    success:
                      type: string
      delete:
        tags:
          - users
        summary: "Supprimer son compte"
        operationId: deleteUser
        security:
        - bearerAuth: []
        responses:
          "200": 
            description: "Votre compte a bien été supprimé"
          "404":
            description: "Utilisateur non trouvé"
                    
    /posts:
      post:
        tags:
          - posts
        summary: "Créer un nouveau post"
        security:
        - bearerAuth: []
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      text:
                        type: string
                      altText:
                        type: string
                  image:
                    type: string
                    format: base64
              encoding:
                image:
                  contentType: image/png, image/jpeg
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                    type: string
      get:
        tags:
          - posts
        summary: "Avoir tous les posts"
        security:
        - bearerAuth: []
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    items:
                      type: object
                      properties:    
                        id:
                          type: number
                          example: 39483910293847584930
                        acountId:
                          type: number
                          example: 12345678901234567890
                        text:
                          type: string
                          example: "Super cool post sur les cheveaux"
                        image:
                          type: string
                          example: "http://localhost:3000/posts/images/supercoolimage_1661445600.png"
                        altText:
                          type: string
                          example: "Un cheval"
                        createdAt:
                          type: number
                          example: 1661445600
                        accountLiked:
                          type: array
                          items:
                            type: string
                            example: "12345678901234567890"                     
    /posts/{PostId}:
      parameters:
      - name: PostId
        in: path
        description: ID du post
        required: true
        schema:
          type: number
      put:
        tags:
          - posts
        summary: "Éditer un post"
        security:
        - bearerAuth: []
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      text:
                        type: string
                        example: "Voici un cheval dans une prairie"
                      altText:
                        type: string
                        example: "Un beau cheval"
                  image:
                        type: string
                        format: base64
              encoding:
                image:
                  contentType: image/png, image/jpeg
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      success:
                        type: string
                        example: "Vous avez bien édité votre post"
      get:
        tags:
          - posts
        summary: "Avoir un seul post"
        security:
        - bearerAuth: []
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 39483910293847584930
                      firstName:
                        type: string
                        example: "Thomas"
                      lastName:
                        type: string
                        example: "Bnt"
                      
                      
      delete:
          tags:
            - posts
          summary: "Supprimer un post"
          security:
          - bearerAuth: []
          responses:
            "200":
              description: successful operation
              content:
                application/json:
                  schema:
                      type: object
                      properties:
                        success:
                          type: string
                          example: "Vous avez bien supprimé votre post"

    /reactions/{Postid}:
          parameters:
          - name: Postid
            in: path
            description: ID du post
            required: true
            schema:
              type: number
          put:
            tags:
              - reactions
            summary: "Ajouter/supprimer une réaction sur un post"
            security:
            - bearerAuth: []
              
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                          success:
                            type: string
                            example: "Vous avez bien édité votre post"

    /status:
          get:
            tags:
              - technique
            responses:
              "200":
                description: successful operation
                content:
                  application/json:
                    schema:
                        type: object
                        properties:
                          success:
                            type: string
                            example: "Tout est up!"


  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT

    requestBodies:
      UserArray:
        content:
          multipart/form-data:
            schema:
              type: array
        description: List of user object
        required: true
    schemas:
      GetUser:
        type: object
        properties:
          id:
            type: number
            description: "ID du compte"
          firstName:
            type: string
            description: "Prénom"
          lastName:
            type: string
            description: "Nom"
          email:
            type: string
            description: "Email"
          imageProfile:
            type: string
            format: int32
            description: "Image de profil"
          createdAt:
            type: number
            description: "http://localhost:3000/imagesProfile/12345678901234567890.png"
      PostUserSecurity:
        type: object
        properties:
          newEmail:
            type: string
            description: "Nouvelle adresse email"
            example: "contact@thomasbnt.fr"
          newPassword:
            type: string
            description: "Nouveau mot de passe"
contentType: yaml
